{
    "apiVersion":"0.2",
    "swaggerVersion":"1.1",
    "basePath":"http://petstore.swagger.wordnik.com/api",
    "resourcePath":"/pet",
    "apis":[
        {
            "path":"/pet.{format}/{petId}",
            "description":"Operations about pets",
            "operations":[
                {
                    "httpMethod":"GET",
                    "summary":"Find pet by ID",
                    "notes":"Returns a pet based on ID",
                    "responseClass":"PetResponse",
                    "nickname":"getPetById",
                    "parameters":[
                        {
                            "name":"petId",
                            "description":"ID of pet that needs to be fetched",
                            "paramType":"path",
                            "required":true,
                            "allowMultiple":false,
                            "dataType":"string"
                        }
                    ],
                    "errorResponses":[
                        {
                            "code":400,
                            "reason":"Invalid ID supplied"
                        },
                        {
                            "code":404,
                            "reason":"Pet not found"
                        }
                    ]
                }
            ]
        },
        {
            "path":"/pet.{format}",
            "description":"Operations about pets",
            "operations":[
                {
                    "httpMethod":"POST",
                    "summary":"Add a new pet to the store",
                    "responseClass":"OtherPetResponse",
                    "nickname":"addPet",
                    "parameters":[
                        {
                            "description":"Pet object that needs to be added to the store",
                            "paramType":"body",
                            "required":true,
                            "allowMultiple":false,
                            "dataType":"Pet"
                        }
                    ],
                    "errorResponses":[
                        {
                            "code":405,
                            "reason":"Invalid input"
                        }
                    ]
                },
                {
                    "httpMethod":"PUT",
                    "summary":"Update an existing pet",
                    "responseClass":"void",
                    "nickname":"updatePet",
                    "parameters":[
                        {
                            "description":"Pet object that needs to be updated in the store",
                            "paramType":"body",
                            "required":true,
                            "allowMultiple":false,
                            "dataType":"Pet"
                        }
                    ],
                    "errorResponses":[
                        {
                            "code":400,
                            "reason":"Invalid ID supplied"
                        },
                        {
                            "code":404,
                            "reason":"Pet not found"
                        },
                        {
                            "code":405,
                            "reason":"Validation exception"
                        }
                    ]
                }
            ]
        },
        {
            "path":"/pet.{format}/findByStatus",
            "description":"Operations about pets",
            "operations":[
                {
                    "httpMethod":"GET",
                    "summary":"Finds Pets by status",
                    "notes":"Multiple status values can be provided with comma seperated strings",
                    "responseClass":"List[Pet]",
                    "nickname":"findPetsByStatus",
                    "parameters":[
                        {
                            "name":"status",
                            "description":"Status values that need to be considered for filter",
                            "paramType":"query",
                            "defaultValue":"available",
                            "allowableValues":{
                                "valueType":"LIST",
                                "values":["available", "pending", "sold"]
                            },
                            "required":true,
                            "allowMultiple":true,
                            "dataType":"string"
                        }
                    ],
                    "errorResponses":[
                        {
                            "code":400,
                            "reason":"Invalid status value"
                        }
                    ]
                }
            ]
        },
        {
            "path":"/pet.{format}/findByTags",
            "description":"Operations about pets",
            "operations":[
                {
                    "httpMethod":"GET",
                    "summary":"Finds Pets by tags",
                    "notes":"Muliple tags can be provided with comma seperated strings. Use tag1, tag2, tag3 for testing.",
                    "deprecated":true,
                    "responseClass":"List[Pet]",
                    "nickname":"findPetsByTags",
                    "parameters":[
                        {
                            "name":"tags",
                            "description":"Tags to filter by",
                            "paramType":"query",
                            "required":true,
                            "allowMultiple":true,
                            "dataType":"string"
                        }
                    ],
                    "errorResponses":[
                        {
                            "code":400,
                            "reason":"Invalid tag value"
                        }
                    ]
                }
            ]
        }
    ],
    "models":{
        "Category":{
            "id":"Category",
            "properties":{
                "id":{
                    "type":"long"
                },
                "name":{
                    "type":"string"
                }
            }
        },
        "OtherPetResponse": {
            "id": "OtherPetResponse",
            "properties": {
                "status": {
                    "type": "int"
                },
                "statusName": {
                    "type": "string"
                },
                "pet": {
                    "type": "Pet"
                }
            }
        },
        "Pet":{
            "id":"Pet",
            "properties":{
                "tags":{
                    "items":{
                        "$ref":"Tag"
                    },
                    "type":"Array"
                },
                "id":{
                    "type":"long"
                },
                "category":{
                    "type":"Category"
                },
                "status":{
                    "allowableValues":{
                        "valueType":"LIST",
                        "values":["available", "pending", "sold"]
                    },
                    "description":"pet status in the store",
                    "type":"string"
                },
                "name":{
                    "type":"string"
                },
                "photoUrls":{
                    "items":{
                        "type":"string"
                    },
                    "type":"Array"
                }
            }
        },
        "PetResponse": {
            "id": "PetResponse",
            "properties": {
                "status": {
                    "type": "int"
                },
                "statusName": {
                    "type": "string"
                },
                "tags": {
                    "type": "Array",
                    "items": {
                        "$ref": "Tag"
                    }
                }
            }
        },
        "Tag":{
            "id":"Tag",
            "properties":{
                "id":{
                    "type":"long"
                },
                "name":{
                    "type":"string"
                }
            }
        }
    }
}