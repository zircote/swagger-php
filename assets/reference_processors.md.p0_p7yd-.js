import{_ as a,c as t,o as s,aj as r}from"./chunks/framework.B72pWmSA.js";const d=JSON.parse('{"title":"Processor Reference","description":"","frontmatter":{},"headers":[],"relativePath":"reference/processors.md","filePath":"reference/processors.md"}'),n={name:"reference/processors.md"};function o(i,e,p,h,l,c){return s(),t("div",null,[...e[0]||(e[0]=[r(`<h1 id="processor-reference" tabindex="-1">Processor Reference <a class="header-anchor" href="#processor-reference" aria-label="Permalink to &quot;Processor Reference&quot;">â€‹</a></h1><p>This page is generated automatically from the <code>swagger-php</code> sources.</p><p>For improvements head over to <a href="https://github.com/zircote/swagger-php" target="_blank" rel="noreferrer">GitHub</a> and create a PR ðŸ˜‰</p><p><em>Processors are listed in the default order of execution.</em></p><h2 id="processor-configuration" tabindex="-1">Processor Configuration <a class="header-anchor" href="#processor-configuration" aria-label="Permalink to &quot;Processor Configuration&quot;">â€‹</a></h2><h3 id="command-line" tabindex="-1">Command line <a class="header-anchor" href="#command-line" aria-label="Permalink to &quot;Command line&quot;">â€‹</a></h3><p>The <code>-c</code> option allows to specify a name/value pair with the name consisting of the processor name (starting lowercase) and option name separated by a dot (<code>.</code>).</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ./vendor/bin/openapi -c operatinId.hash</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">true</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> //</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ...</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ./vendor/bin/openapi -c pathFilter.tags[]=/pets/ -c pathFilter.tags[]=/store/ // ...</span></span></code></pre></div><h3 id="programmatically-with-php" tabindex="-1">Programmatically with PHP <a class="header-anchor" href="#programmatically-with-php" aria-label="Permalink to &quot;Programmatically with PHP&quot;">â€‹</a></h3><p>Configuration can be set using the <code>Generator::setConfig()</code> method. Keys can either be the same as on the command line or be broken down into nested arrays.</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Generator</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    -&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &#39;operationId.hash&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &#39;pathFilter&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            &#39;tags&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                &#39;/</span><span style="--shiki-light:#032F62;--shiki-dark:#DBEDFF;">pets</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                &#39;/</span><span style="--shiki-light:#032F62;--shiki-dark:#DBEDFF;">store</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            ],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        ],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ]);</span></span></code></pre></div><h2 id="default-processors" tabindex="-1">Default Processors <a class="header-anchor" href="#default-processors" aria-label="Permalink to &quot;Default Processors&quot;">â€‹</a></h2><h3 id="docblockdescriptions" tabindex="-1"><a href="https://github.com/zircote/swagger-php/tree/master/src/Processors/DocBlockDescriptions.php" target="_blank" rel="noreferrer">DocBlockDescriptions</a> <a class="header-anchor" href="#docblockdescriptions" aria-label="Permalink to &quot;[DocBlockDescriptions](https://github.com/zircote/swagger-php/tree/master/src/Processors/DocBlockDescriptions.php)&quot;">â€‹</a></h3><p>Checks if the annotation has a summary and/or description property and uses the text in the comment block (above the annotations) as summary and/or description.</p><p>Use <code>null</code>, for example: <code>@Annotation(description=null)</code>, if you don&#39;t want the annotation to have a description.</p><h3 id="mergeintoopenapi" tabindex="-1"><a href="https://github.com/zircote/swagger-php/tree/master/src/Processors/MergeIntoOpenApi.php" target="_blank" rel="noreferrer">MergeIntoOpenApi</a> <a class="header-anchor" href="#mergeintoopenapi" aria-label="Permalink to &quot;[MergeIntoOpenApi](https://github.com/zircote/swagger-php/tree/master/src/Processors/MergeIntoOpenApi.php)&quot;">â€‹</a></h3><p>Merge all <code>@OA\\OpenApi</code> annotations into one.</p><h3 id="mergeintocomponents" tabindex="-1"><a href="https://github.com/zircote/swagger-php/tree/master/src/Processors/MergeIntoComponents.php" target="_blank" rel="noreferrer">MergeIntoComponents</a> <a class="header-anchor" href="#mergeintocomponents" aria-label="Permalink to &quot;[MergeIntoComponents](https://github.com/zircote/swagger-php/tree/master/src/Processors/MergeIntoComponents.php)&quot;">â€‹</a></h3><p>Merge reusable annotation into <code>@OA\\Schemas</code>.</p><h3 id="expandclasses" tabindex="-1"><a href="https://github.com/zircote/swagger-php/tree/master/src/Processors/ExpandClasses.php" target="_blank" rel="noreferrer">ExpandClasses</a> <a class="header-anchor" href="#expandclasses" aria-label="Permalink to &quot;[ExpandClasses](https://github.com/zircote/swagger-php/tree/master/src/Processors/ExpandClasses.php)&quot;">â€‹</a></h3><p>Iterate over the chain of ancestors of a schema and:</p><ul><li>if the ancestor has a schema =&gt; inherit from the ancestor if it has a schema (allOf) and stop.</li><li>else =&gt; merge ancestor properties into the schema.</li></ul><h3 id="expandinterfaces" tabindex="-1"><a href="https://github.com/zircote/swagger-php/tree/master/src/Processors/ExpandInterfaces.php" target="_blank" rel="noreferrer">ExpandInterfaces</a> <a class="header-anchor" href="#expandinterfaces" aria-label="Permalink to &quot;[ExpandInterfaces](https://github.com/zircote/swagger-php/tree/master/src/Processors/ExpandInterfaces.php)&quot;">â€‹</a></h3><p>Look at all (direct) interfaces for a schema and:</p><ul><li>merge interfaces annotations/methods into the schema if the interface does not have a schema itself</li><li>inherit from the interface if it has a schema (allOf).</li></ul><h3 id="expandtraits" tabindex="-1"><a href="https://github.com/zircote/swagger-php/tree/master/src/Processors/ExpandTraits.php" target="_blank" rel="noreferrer">ExpandTraits</a> <a class="header-anchor" href="#expandtraits" aria-label="Permalink to &quot;[ExpandTraits](https://github.com/zircote/swagger-php/tree/master/src/Processors/ExpandTraits.php)&quot;">â€‹</a></h3><p>Look at all (direct) traits for a schema and:</p><ul><li>merge trait annotations/methods/properties into the schema if the trait does not have a schema itself</li><li>inherit from the trait if it has a schema (allOf).</li></ul><h3 id="expandenums" tabindex="-1"><a href="https://github.com/zircote/swagger-php/tree/master/src/Processors/ExpandEnums.php" target="_blank" rel="noreferrer">ExpandEnums</a> <a class="header-anchor" href="#expandenums" aria-label="Permalink to &quot;[ExpandEnums](https://github.com/zircote/swagger-php/tree/master/src/Processors/ExpandEnums.php)&quot;">â€‹</a></h3><p>Expands PHP enums.</p><p>Determines <code>schema</code>, <code>enum</code> and <code>type</code>.</p><h4 id="config-settings" tabindex="-1">Config settings <a class="header-anchor" href="#config-settings" aria-label="Permalink to &quot;Config settings&quot;">â€‹</a></h4><p><strong>expandEnums.enumNames</strong> : <span style="font-family:monospace;">string</span><br><strong>default</strong> : <span style="font-family:monospace;">null</span></p><p>Â Â Â Â Specifies the name of the extension variable where backed enum names will be stored.<br> Â Â Â Â Set to <code>null</code> to avoid writing backed enum names.<br> Â Â Â Â <br> Â Â Â Â Example:<br> Â Â Â Â <code>-&gt;setEnumNames(&#39;enumNames&#39;)</code> yields:<br></p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  x-enumNames</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">NAME1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">NAME2</span></span></code></pre></div><h3 id="augmentschemas" tabindex="-1"><a href="https://github.com/zircote/swagger-php/tree/master/src/Processors/AugmentSchemas.php" target="_blank" rel="noreferrer">AugmentSchemas</a> <a class="header-anchor" href="#augmentschemas" aria-label="Permalink to &quot;[AugmentSchemas](https://github.com/zircote/swagger-php/tree/master/src/Processors/AugmentSchemas.php)&quot;">â€‹</a></h3><p>Use the Schema context to extract useful information and inject that into the annotation.</p><p>Merges properties.</p><h3 id="augmentrequestbody" tabindex="-1"><a href="https://github.com/zircote/swagger-php/tree/master/src/Processors/AugmentRequestBody.php" target="_blank" rel="noreferrer">AugmentRequestBody</a> <a class="header-anchor" href="#augmentrequestbody" aria-label="Permalink to &quot;[AugmentRequestBody](https://github.com/zircote/swagger-php/tree/master/src/Processors/AugmentRequestBody.php)&quot;">â€‹</a></h3><p>Use the RequestBody context to extract useful information and inject that into the annotation.</p><h3 id="augmentproperties" tabindex="-1"><a href="https://github.com/zircote/swagger-php/tree/master/src/Processors/AugmentProperties.php" target="_blank" rel="noreferrer">AugmentProperties</a> <a class="header-anchor" href="#augmentproperties" aria-label="Permalink to &quot;[AugmentProperties](https://github.com/zircote/swagger-php/tree/master/src/Processors/AugmentProperties.php)&quot;">â€‹</a></h3><p>Use the property context to extract useful information and inject that into the annotation.</p><h4 id="config-settings-1" tabindex="-1">Config settings <a class="header-anchor" href="#config-settings-1" aria-label="Permalink to &quot;Config settings&quot;">â€‹</a></h4><p><strong>augmentProperties.generator</strong> : <span style="font-family:monospace;">OpenApi\\Generator</span><br><strong>default</strong> : <span style="font-family:monospace;">N/A</span></p><p>Â Â Â Â No details available.<br></p><h3 id="augmentdiscriminators" tabindex="-1"><a href="https://github.com/zircote/swagger-php/tree/master/src/Processors/AugmentDiscriminators.php" target="_blank" rel="noreferrer">AugmentDiscriminators</a> <a class="header-anchor" href="#augmentdiscriminators" aria-label="Permalink to &quot;[AugmentDiscriminators](https://github.com/zircote/swagger-php/tree/master/src/Processors/AugmentDiscriminators.php)&quot;">â€‹</a></h3><p>Use the property context to extract useful information and inject that into the annotation.</p><h3 id="buildpaths" tabindex="-1"><a href="https://github.com/zircote/swagger-php/tree/master/src/Processors/BuildPaths.php" target="_blank" rel="noreferrer">BuildPaths</a> <a class="header-anchor" href="#buildpaths" aria-label="Permalink to &quot;[BuildPaths](https://github.com/zircote/swagger-php/tree/master/src/Processors/BuildPaths.php)&quot;">â€‹</a></h3><p>Build the openapi-&gt;paths using the detected <code>@OA\\PathItem</code> and <code>@OA\\Operation</code> (<code>@OA\\Get</code>, etc).</p><h3 id="augmentparameters" tabindex="-1"><a href="https://github.com/zircote/swagger-php/tree/master/src/Processors/AugmentParameters.php" target="_blank" rel="noreferrer">AugmentParameters</a> <a class="header-anchor" href="#augmentparameters" aria-label="Permalink to &quot;[AugmentParameters](https://github.com/zircote/swagger-php/tree/master/src/Processors/AugmentParameters.php)&quot;">â€‹</a></h3><p>Augments shared and operations parameters from docblock comments.</p><h4 id="config-settings-2" tabindex="-1">Config settings <a class="header-anchor" href="#config-settings-2" aria-label="Permalink to &quot;Config settings&quot;">â€‹</a></h4><p><strong>augmentParameters.augmentOperationParameters</strong> : <span style="font-family:monospace;">bool</span><br><strong>default</strong> : <span style="font-family:monospace;">true</span></p><p>Â Â Â Â If set to <code>true</code> try to find operation parameter descriptions in the operation docblock.<br></p><h3 id="augmentrefs" tabindex="-1"><a href="https://github.com/zircote/swagger-php/tree/master/src/Processors/AugmentRefs.php" target="_blank" rel="noreferrer">AugmentRefs</a> <a class="header-anchor" href="#augmentrefs" aria-label="Permalink to &quot;[AugmentRefs](https://github.com/zircote/swagger-php/tree/master/src/Processors/AugmentRefs.php)&quot;">â€‹</a></h3><h3 id="mergejsoncontent" tabindex="-1"><a href="https://github.com/zircote/swagger-php/tree/master/src/Processors/MergeJsonContent.php" target="_blank" rel="noreferrer">MergeJsonContent</a> <a class="header-anchor" href="#mergejsoncontent" aria-label="Permalink to &quot;[MergeJsonContent](https://github.com/zircote/swagger-php/tree/master/src/Processors/MergeJsonContent.php)&quot;">â€‹</a></h3><p>Split JsonContent into Schema and MediaType.</p><h3 id="mergexmlcontent" tabindex="-1"><a href="https://github.com/zircote/swagger-php/tree/master/src/Processors/MergeXmlContent.php" target="_blank" rel="noreferrer">MergeXmlContent</a> <a class="header-anchor" href="#mergexmlcontent" aria-label="Permalink to &quot;[MergeXmlContent](https://github.com/zircote/swagger-php/tree/master/src/Processors/MergeXmlContent.php)&quot;">â€‹</a></h3><p>Split XmlContent into Schema and MediaType.</p><h3 id="operationid" tabindex="-1"><a href="https://github.com/zircote/swagger-php/tree/master/src/Processors/OperationId.php" target="_blank" rel="noreferrer">OperationId</a> <a class="header-anchor" href="#operationid" aria-label="Permalink to &quot;[OperationId](https://github.com/zircote/swagger-php/tree/master/src/Processors/OperationId.php)&quot;">â€‹</a></h3><p>Generate the OperationId based on the context of the OpenApi annotation.</p><h4 id="config-settings-3" tabindex="-1">Config settings <a class="header-anchor" href="#config-settings-3" aria-label="Permalink to &quot;Config settings&quot;">â€‹</a></h4><p><strong>operationId.hash</strong> : <span style="font-family:monospace;">bool</span><br><strong>default</strong> : <span style="font-family:monospace;">true</span></p><p>Â Â Â Â If set to <code>true</code> generate ids (md5) instead of clear text operation ids.<br></p><h3 id="cleanunmerged" tabindex="-1"><a href="https://github.com/zircote/swagger-php/tree/master/src/Processors/CleanUnmerged.php" target="_blank" rel="noreferrer">CleanUnmerged</a> <a class="header-anchor" href="#cleanunmerged" aria-label="Permalink to &quot;[CleanUnmerged](https://github.com/zircote/swagger-php/tree/master/src/Processors/CleanUnmerged.php)&quot;">â€‹</a></h3><h3 id="pathfilter" tabindex="-1"><a href="https://github.com/zircote/swagger-php/tree/master/src/Processors/PathFilter.php" target="_blank" rel="noreferrer">PathFilter</a> <a class="header-anchor" href="#pathfilter" aria-label="Permalink to &quot;[PathFilter](https://github.com/zircote/swagger-php/tree/master/src/Processors/PathFilter.php)&quot;">â€‹</a></h3><p>Allows to filter endpoints based on tags and/or path.</p><p>If no <code>tags</code> or <code>paths</code> filters are set, no filtering is performed.</p><p>All filter (regular) expressions must be enclosed within delimiter characters as they are used as-is.</p><h4 id="config-settings-4" tabindex="-1">Config settings <a class="header-anchor" href="#config-settings-4" aria-label="Permalink to &quot;Config settings&quot;">â€‹</a></h4><p><strong>pathFilter.tags</strong> : <span style="font-family:monospace;">array</span><br><strong>default</strong> : <span style="font-family:monospace;">[]</span></p><p>Â Â Â Â A list of regular expressions to match <code>tags</code> to include.<br></p><p><strong>pathFilter.paths</strong> : <span style="font-family:monospace;">array</span><br><strong>default</strong> : <span style="font-family:monospace;">[]</span></p><p>Â Â Â Â A list of regular expressions to match <code>paths</code> to include.<br></p><p><strong>pathFilter.recurseCleanup</strong> : <span style="font-family:monospace;">bool</span><br><strong>default</strong> : <span style="font-family:monospace;">false</span></p><p>Â Â Â Â Flag to do a recursive cleanup of unused paths and their nested annotations.<br></p><h3 id="cleanunusedcomponents" tabindex="-1"><a href="https://github.com/zircote/swagger-php/tree/master/src/Processors/CleanUnusedComponents.php" target="_blank" rel="noreferrer">CleanUnusedComponents</a> <a class="header-anchor" href="#cleanunusedcomponents" aria-label="Permalink to &quot;[CleanUnusedComponents](https://github.com/zircote/swagger-php/tree/master/src/Processors/CleanUnusedComponents.php)&quot;">â€‹</a></h3><p>Tracks the use of all <code>Components</code> and removed unused schemas.</p><h4 id="config-settings-5" tabindex="-1">Config settings <a class="header-anchor" href="#config-settings-5" aria-label="Permalink to &quot;Config settings&quot;">â€‹</a></h4><p><strong>cleanUnusedComponents.enabled</strong> : <span style="font-family:monospace;">bool</span><br><strong>default</strong> : <span style="font-family:monospace;">false</span></p><p>Â Â Â Â Enables/disables the <code>CleanUnusedComponents</code> processor.<br></p><h3 id="augmenttags" tabindex="-1"><a href="https://github.com/zircote/swagger-php/tree/master/src/Processors/AugmentTags.php" target="_blank" rel="noreferrer">AugmentTags</a> <a class="header-anchor" href="#augmenttags" aria-label="Permalink to &quot;[AugmentTags](https://github.com/zircote/swagger-php/tree/master/src/Processors/AugmentTags.php)&quot;">â€‹</a></h3><p>Ensures that all tags used on operations also exist in the global <code>tags</code> list.</p><h4 id="config-settings-6" tabindex="-1">Config settings <a class="header-anchor" href="#config-settings-6" aria-label="Permalink to &quot;Config settings&quot;">â€‹</a></h4><p><strong>augmentTags.whitelist</strong> : <span style="font-family:monospace;">array</span><br><strong>default</strong> : <span style="font-family:monospace;">[]</span></p><p>Â Â Â Â Whitelist tags to keep even if not used. <code>*</code> may be used to keep all unused.<br></p>`,86)])])}const m=a(n,[["render",o]]);export{d as __pageData,m as default};
