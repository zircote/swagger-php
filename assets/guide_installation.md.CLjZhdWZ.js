import{_ as a,c as t,o as s,aj as i}from"./chunks/framework.B72pWmSA.js";const g=JSON.parse('{"title":"Installation","description":"","frontmatter":{},"headers":[],"relativePath":"guide/installation.md","filePath":"guide/installation.md"}'),o={name:"guide/installation.md"};function n(l,e,r,p,d,c){return s(),t("div",null,[...e[0]||(e[0]=[i('<h1 id="installation" tabindex="-1">Installation <a class="header-anchor" href="#installation" aria-label="Permalink to &quot;Installation&quot;">​</a></h1><h2 id="per-project" tabindex="-1">Per project <a class="header-anchor" href="#per-project" aria-label="Permalink to &quot;Per project&quot;">​</a></h2><p>We recommend adding <code>swagger-php</code> to your project using <a href="https://getcomposer.org" target="_blank" rel="noreferrer">Composer</a></p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> composer require zircote/swagger-php</span></span></code></pre></div><h2 id="globally" tabindex="-1">Globally <a class="header-anchor" href="#globally" aria-label="Permalink to &quot;Globally&quot;">​</a></h2><p>Alternatively, use the composer <code>global</code> argument to install <code>swagger-php</code> globally.</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> composer global require zircote/swagger-php</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">PATH variables</p><p>Remember to add the <code>~/.composer/vendor/bin</code> directory to the PATH in your environment.</p></div><h2 id="type-resolvers" tabindex="-1">Type resolvers <a class="header-anchor" href="#type-resolvers" aria-label="Permalink to &quot;Type resolvers&quot;">​</a></h2><p><code>swagger-php</code> version <code>5.5</code> introduces a new type resolver that is used internally to determine the schema type of properties (and other elements with a schema).</p><p>By default, a custom <code>LegacyTypeResolver</code> is used. If you are on PHP 8.2 or higher, the <code>TypeInfoTypeResolver</code> can be used instead. For this the <a href="https://github.com/DerManoMann/type-info-extras" target="_blank" rel="noreferrer">radebatz/type-info-extras</a> package is required.</p><p>Since it is optional, it needs to be installed manually:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">composer</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> require</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> radebatz/type-info-extras</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">Additional dependencies</p><p>Installing <code>radebatz/type-info-extras</code> will also add <code>symfony/type-info</code> as a dependency.</p></div><h2 id="using-doctrine-annotations" tabindex="-1">Using doctrine annotations <a class="header-anchor" href="#using-doctrine-annotations" aria-label="Permalink to &quot;Using doctrine annotations&quot;">​</a></h2><p>As of version <code>4.8</code> the <a href="https://www.doctrine-project.org/projects/annotations.html" target="_blank" rel="noreferrer">doctrine annotations</a> library <strong>is optional</strong> and <strong>no longer installed by default</strong>.</p><p>If your code uses doctrine annotations you will need to install that library manually:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">composer</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> require</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> doctrine/annotations</span></span></code></pre></div>',18)])])}const u=a(o,[["render",n]]);export{g as __pageData,u as default};
